import dotenv from 'dotenv';
import { WebParser } from './utils/webParser.js';
import { AnimalDetectorAgent } from './agents/animalDetectorAgent.js';
import { ZoologistAgent } from './agents/zoologistAgent.js';
import { PerplexitySearch } from './services/perplexitySearch.js';
import { logger } from './utils/logger.js';

dotenv.config();

async function main() {
  const url = process.argv[2];
  
  if (!url) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞');
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npm start <URL>');
    process.exit(1);
  }
  
  logger.info('üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö —Å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã');
  logger.info(`üìé URL: ${url}`);
  
  try {
    // –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    logger.info('üîÑ –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    const parser = new WebParser();
    const pageText = await parser.fetchText(url);
    
    if (!pageText || pageText.trim().length === 0) {
      logger.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
      process.exit(1);
    }
    
    logger.success(`‚úÖ –¢–µ–∫—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω: ${pageText.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // –®–∞–≥ 2: –ü–æ–∏—Å–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ —Ç–µ–∫—Å—Ç–µ (–∞–≥–µ–Ω—Ç 1)
    logger.info('üîÑ –®–∞–≥ 2: –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö...');
    const detector = new AnimalDetectorAgent();
    const animals = await detector.findAnimals(pageText);
    
    if (!animals || animals.length === 0) {
      logger.info('‚ùå –ñ–∏–≤–æ—Ç–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—Å—Ç–µ');
      logger.info('üõë –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω');
      process.exit(0);
    }
    
    logger.success(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö: ${animals.length}`);
    logger.animals(animals);
    
    // –®–∞–≥ 3: –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Perplexity
    logger.info('üîÑ –®–∞–≥ 3: –ü–æ–∏—Å–∫ –Ω–∞—É—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö...');
    const perplexity = new PerplexitySearch();
    const animalsWithInfo = [];
    
    for (let i = 0; i < animals.length; i++) {
      const animal = animals[i];
      logger.info(`üîç –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ${i + 1}/${animals.length}: ${animal.name}`);
      
      try {
        const query = `${animal.name} - –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—è, –±–∏–æ—Ö–∏–º–∏—è, –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∞—Ä–µ–∞–ª –æ–±–∏—Ç–∞–Ω–∏—è`;
        const searchResults = await perplexity.search(query, {
          max_results: 5,
          max_tokens_per_page: 1024,
          country: 'RU'
        });
        
        animalsWithInfo.push({
          ...animal,
          perplexityResults: searchResults
        });
        
        logger.success(`‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ –¥–ª—è ${animal.name}`);
      } catch (error) {
        logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–ª—è ${animal.name}: ${error.message}`);
        animalsWithInfo.push({
          ...animal,
          perplexityResults: null
        });
      }
    }
    
    // –®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—É—á–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏ (–∞–≥–µ–Ω—Ç 2)
    logger.info('üîÑ –®–∞–≥ 4: –ê–Ω–∞–ª–∏–∑ –∏ –æ–±–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö...');
    const zoologist = new ZoologistAgent();
    const reports = await zoologist.getReports(animalsWithInfo);
    
    logger.success('‚úÖ –ù–∞—É—á–Ω—ã–µ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã');
    logger.reports(reports);
    
    logger.info('üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    
  } catch (error) {
    logger.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    if (process.env.DEBUG) {
      console.error(error.stack);
    }
    process.exit(1);
  }
}

main();
